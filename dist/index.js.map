{"version":3,"file":"index.js","sources":["../src/common.js","../src/index.js"],"sourcesContent":["\n//  Initial request state\nexport const initialRequest = {\n  pending: false,\n  success: false,\n  failed: false,\n  successCount: 0,\n  failureCount: 0,\n  message: '',\n  clean: true\n};\n","import { shallow } from 'enzyme'\n\nexport { initialRequest as initialRequestState } from './common';\n\nexport default function wrapRequest(request, actionsMock) {\n  const defaultContextState = {\n    data: { },\n    actions: { }\n  }\n\n  /* eslint-disable eqeqeq */\n  if (actionsMock && actionsMock.constructor == Object) {\n    // Allow easy requestState action manip and tracking on request component via object ref\n    defaultContextState.actions = actionsMock\n  }\n\n  const ripOff = () => {\n    const component = request.instance().renderComponent(defaultContextState)\n    return shallow(component)\n  }\n\n  return function setValue (value) {\n    if (value && value.constructor == Object && value.id) {\n      // Allow easy requestState manip and tracking on request component via object ref\n      const data = { [value.id]: value }\n      defaultContextState.data = data\n    }\n    return ripOff()\n  }\n}\n"],"names":["initialRequest","wrapRequest","request","actionsMock","defaultContextState","constructor","Object","actions","ripOff","component","instance","renderComponent","shallow","setValue","value","id","data"],"mappings":";;;;;;AACA;AACA,IAAaA,iBAAiB;WACnB,KADmB;WAEnB,KAFmB;UAGpB,KAHoB;gBAId,CAJc;gBAKd,CALc;WAMnB,EANmB;SAOrB;CAPF;;;;;;;;;;;;;;;;;ACEQ,SAASC,WAAT,CAAqBC,OAArB,EAA8BC,WAA9B,EAA2C;MAClDC,sBAAsB;UACpB,EADoB;aAEjB;;;GAFX,CAMA,IAAID,eAAeA,YAAYE,WAAZ,IAA2BC,MAA9C,EAAsD;;wBAEhCC,OAApB,GAA8BJ,WAA9B;;;MAGIK,SAAS,SAATA,MAAS,GAAM;QACbC,YAAYP,QAAQQ,QAAR,GAAmBC,eAAnB,CAAmCP,mBAAnC,CAAlB;WACOQ,eAAQH,SAAR,CAAP;GAFF;;SAKO,SAASI,QAAT,CAAmBC,KAAnB,EAA0B;QAC3BA,SAASA,MAAMT,WAAN,IAAqBC,MAA9B,IAAwCQ,MAAMC,EAAlD,EAAsD;;UAE9CC,0BAAUF,MAAMC,EAAhB,EAAqBD,KAArB,CAAN;0BACoBE,IAApB,GAA2BA,IAA3B;;WAEKR,QAAP;GANF;;;;;;"}